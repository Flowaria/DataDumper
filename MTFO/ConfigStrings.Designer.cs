//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MTFO {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConfigStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConfigStrings() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MTFO.ConfigStrings", typeof(ConfigStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
        ///   재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Debug과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SECTION_DEBUG {
            get {
                return ResourceManager.GetString("SECTION_DEBUG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Developer Settings과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SECTION_DEV {
            get {
                return ResourceManager.GetString("SECTION_DEV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General Settings과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SECTION_GENERAL {
            get {
                return ResourceManager.GetString("SECTION_GENERAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   EnableHotReload과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_HOTRELOAD {
            get {
                return ResourceManager.GetString("SETTING_HOTRELOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Developer Setting
        ///Hot reloading is an experimental feature that allows the user to reload game data blocks without having to restart the game
        ///Currently this only works on the &apos;Rundown&apos; and &apos;LevelLayout&apos; data blocks과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_HOTRELOAD_DESC {
            get {
                return ResourceManager.GetString("SETTING_HOTRELOAD_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LEGACY - RundownPackage과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_RUNDOWNPACKAGE {
            get {
                return ResourceManager.GetString("SETTING_RUNDOWNPACKAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   THIS IS A LEGACY FEATURE AND HAS NO EFFECT IF LEGACY LOADING IS NOT ENABLED
        ///The name of the folder containing the game data to load
        ///Folders containing game data should be placed in config&gt;Rundowns
        ///&apos;default&apos; loads a folder matching &apos;GameData_XXXXX&apos; where X is the current game version과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_RUNDOWNPACKAGE_DESC {
            get {
                return ResourceManager.GetString("SETTING_RUNDOWNPACKAGE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   LegacyLoading과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_USE_LEGACY_PATH {
            get {
                return ResourceManager.GetString("SETTING_USE_LEGACY_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggles legacy loading과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_USE_LEGACY_PATH_DESC {
            get {
                return ResourceManager.GetString("SETTING_USE_LEGACY_PATH_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Verbose과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_VERBOSE {
            get {
                return ResourceManager.GetString("SETTING_VERBOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggles logging of information that tends to clog the console과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string SETTING_VERBOSE_DESC {
            get {
                return ResourceManager.GetString("SETTING_VERBOSE_DESC", resourceCulture);
            }
        }
    }
}
